import requests

access_token = "v^1.1#i^1#p^3#f^0#r^0#I^3#t^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"

headers = {
    "Authorization": f"Bearer {access_token}",
    "Content-Type": "application/json",
    "Accept": "application/json"
}

response = requests.get("https://api.ebay.com/sell/account/v1/privilege", headers=headers)

print("Status:", response.status_code)
try:
    print("Response:")
    print(response.json())
except Exception as e:
    print("Failed to parse response as JSON:", str(e))
    print("Raw Response:", response.text)
